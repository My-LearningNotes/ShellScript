Shell位置参数
=============

运行Shell脚本时我们可以给它传递一些参数, 这些参数在脚本文件内部可以使用\ ``$n``\ 的形式来接收, 
例如, \ ``$1``\ 表示第一个参数, \ ``$2``\ 表示第二个参数, 以此类推.

同样, 在调用函数时也可以传递参数.
Shell函数参数的传递和其它编程语言不同, 没有所谓的形参和实参, 在定义函数时也不用指明参数的名字和数目.
换句话说, 定义Shell函数时不能带参数, 但是在调用函数时却可以传递参数, 在函数内部也使用\ ``$n``\ 的形式来接收, 
例如, \ ``$1``\ 表示第一个参数, \ ``$2``\ 表示第二个参数, 以此类推.

这种通过\ ``$n``\ 的形式来接收的参数, 在Shell中称为\ **位置参数**\ .

.. note::

    ``$0``\ 表示执行的脚本文件名, 即使在函数内部也是如此.

如果为Shell脚本传递的参数中包含空白字符, 应该使用单引号或双引号将参数括起来, 以便脚本将这个参数作为整体来接收.

.. attention::

    如果参数的个说太多, 达到或者超过了10个, 那么就得用\ ``${n}``\ 的形式来接收了, 例如${10}, ${20}.

    ``{}``\ 的作用是为了帮助解释器识别参数的边界, 这跟使用变量时加\ ``{}``\ 是一样的效果.


Example:

.. code-block:: bash

    #!/usr/bin/env bash

    echo "first arg: $1"
    echo "second arg: $2"
    echo "third arg: $3""

