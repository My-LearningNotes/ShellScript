Shell数学计算
=============

如果要执行数学计算, 就离不开各种运算符号, 和其它编程语言类似, Shell也有很多算术运算符.

========================================   ===================================================
``+`` ``-``                                加法(或正好), 加法(或负号)
``*`` ``/`` ``%``                          乘法, 除法, 取余(取模)
``**``                                     幂运算
``++`` ``--``                              自增和自减, 可以放在变量的前面也可以放在变量的后面
``&&`` ``||`` ``!``                        逻辑与, 逻辑或, 逻辑非
``<`` ``<=`` ``>`` ``>=``                  比较符号
``==`` ``!=``                              比较符号
``<<`` ``>>``                              向左移位, 向右移位 
``~`` ``|`` ``&`` ``^``                    按位取反, 按位或, 按为与, 按位异或
``=`` ``+=`` ``-=`` ``*=`` ``/=`` ``%=``   赋值和复合赋值运算符
========================================   ===================================================


数学计算命令
------------

Shell和其它编程语言不同, \ **Shell不能直接进行算术运算, 必须使用数学计算命令**\ .

Shell中常用的六种数学计算方式:

============== ===========================================================
``(())``       用于整数运算, 效率很高, 推荐使用.
``let``        用于整数运算, 和\ ``(())``\ 类似.
``$[]``        用于整数运算, 不如\ ``(())`` 灵活.
``expr``       可用于整数运算, 也可以处理字符串. 

               比较麻烦, 需要注意各种细节, 不推荐使用.
``bc``         Linux下的一个计算器程序, 可以处理整数和小数运算.

               Shell本身只支持整数运算, 想计算小数就得使用\ ``bc``\ .
``declare -i`` 将变量定义整数, 然后在进行数学运算时就不会被当作字符串了.

               功能有限, 仅支持最基本的数学运算(加减乘除和取余).
============== ===========================================================

.. note::

    学习\ ``(())``\ 和\ ``bc``\ 即可: ``(())``\ 可以用于整数计算, ``bc``\ 可以用于小数计算.


Shell ``(())`` - 对整数进行数学运算
-----------------------------------

双小括号\ ``(())``\ 是Bash Shell中专门用来进行整数运算的命令, 它的效率很高, 写法灵活.

.. attention::

    ``(())``\ 只能进行整数运算, 不能对小数或者字符串进行运算.


Shell ``(())``\ 的用法
^^^^^^^^^^^^^^^^^^^^^^

双小括号\ ``(())``\ 的语法格式为:

.. code-block:: sh

    ((表达式))

通俗地讲, 就是将数学运算表达式放在\ ``((``\ 和\ ``))``\ 之间.

表达式可以只有一个, 也可以有多个, 多个表达式之间以逗号\ ``,``\ 分隔. 
对于多个表达式的情况, 以最后一个表达式的值作为整个\ ``(())``\ 命令的执行结果.

可以使用\ ``$``\ 获取\ ``(())``\ 命令的结果, 这和使用\ ``$``\ 获得变量的值是类似的.

``(())``\ 的用法:

+-------------------+-------------------------------------------------------------------------+
| ((a=10+66))       | 这种写法可以在计算完成后给变量赋值.                                     |
| ((b=a-15))        |                                                                         |
| ((c=a+b))         | 以((b=a-15))为例, 即将a-15的运算结果赋值给变量c.                        |
+-------------------+-------------------------------------------------------------------------+
| a=$((10+66))      | 可以在\ ``(()))``\ 前面加上\ ``$``\ 符号获取\ ``(())`` 命令的执行结果.  |
| b=$((a-15))       |                                                                         |
| c=$((a+b))        | 以c=$((a+b))为例, 即将a+b这个表达式的运算结果赋值给便来嗯c.             |
+-------------------+-------------------------------------------------------------------------+
| ((a>7 && b==c))   | ``(())``\ 也可以进行逻辑运算, 在\ ``if``\ 语句中常会使用逻辑运算.       |
+-------------------+-------------------------------------------------------------------------+
| echo $((a+10))    | 需要立即输出表达式的运算结果时, 可以在\ ``(())``\ 前面加上\ ``$``\ 符号.|
+-------------------+-------------------------------------------------------------------------+
| ((a=3+5, b=a+10)) | 对多个表达式同时进行计算.                                               |
+-------------------+-------------------------------------------------------------------------+

在\ ``(())``\ 中使用变量无需要加上\ ``$``\ 前缀, ``(())``\ 会自动解析变量名, 这使得代码更加简洁.


Linux ``bc``\ 命令 - 一款数学计算器
-----------------------------------

